@using EntityLayer;
@model PostGenreLocationUserModel;
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <h2>Post Update</h2><br />
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Update", "Post", FormMethod.Post, new { @class = "form-group", @enctype = "multipart/form-data" }))
        {
            @Html.TextBox("PostId",Model.PostModel.PostId,new { @class = "form-control" ,@type="hidden"})
            @Html.Label("Creator NickName")
            <select class="form-control" name="UserId">
                @foreach (var item in Model.UserModel)
                {
                    if (item.UserId == Model.PostModel.UserId)
                    {
                        <option value=" @item.UserId" selected>@item.NickName</option>
                    }
                    else
                    {
                        <option value=" @item.UserId">@item.NickName</option>
                    }
                }
            </select>
            <br />
            @Html.Label("Type")
            <select class="form-control" name="GenreId">
                @foreach (var item in Model.GenreModel)
                {
                    if (item.GenreId == Model.PostModel.GenreId)
                    {
                        <option value=" @item.GenreId" selected>@item.GenreName</option>
                    }
                    else
                    {
                        <option value=" @item.GenreId">@item.GenreName</option>
                    }
                }
            </select>
            <br />
            @Html.Label("GenerateDate")
            @Html.TextBox("GenerateDate",Model.PostModel.GenerateDate,new{@class="form-control"})
            <br />
            @Html.Label("Post ImgFile")
            <input id="image_file" type="file" name="imgFiles" class="form-control" accept="image/*" onchange="changeContent()" multiple />
            @Html.ValidationMessage("imgFiles","",new{@class="text-danger"})
            <br />
            //style="object-fit:contain; = orijinal fotoyu getirir...."
            <div style="display:flex;justify-content:space-around;">
                <div style="border:1px dashed black;padding:5px;width:25%;height:150px;padding:10px;">
                    <ion-icon name="close-circle-outline" class="carpi" onclick="photoRemove('PostContent','imageSize1','imageDisplay1','imageName1')"></ion-icon>
                    <img id="imageDisplay1" src="~/post_images/@Model.PostModel.PostContent" width="100%" height="90%" /><br>
                    <label id="imageName1">@Model.PostModel.PostContent.Split("_")[1]</label><br>
                    <label id="imageSize1"></label>
                </div>
                <div style="border:1px dashed black;padding:5px;width:25%;height:150px;padding:10px;">
                    <ion-icon name="close-circle-outline" class="carpi" onclick="photoRemove('PostContent2','imageSize2','imageDisplay2','imageName2')"></ion-icon>
                    <img id="imageDisplay2" src="~/post_images/@Model.PostModel.PostContent2" width="100%" height="90%" /><br>
                    <label id="imageName2">
                        @if (@Model.PostModel.PostContent2 != null)
                        {
                            @Model.PostModel.PostContent2.Split("_")[1]
                        }
                    </label><br>
                    <label id="imageSize2"></label>
                </div>
                <div style="border:1px dashed black;padding:5px;width:25%;height:150px;padding:10px;">
                    <ion-icon name="close-circle-outline" class="carpi" onclick="photoRemove('PostContent3','imageSize3','imageDisplay3','imageName3')"></ion-icon>
                    <img id="imageDisplay3" src="~/post_images/@Model.PostModel.PostContent3" width="100%" height="90%" /><br>
                    <label id="imageName3">
                        @if (@Model.PostModel.PostContent3 != null)
                        {
                            @Model.PostModel.PostContent3.Split("_")[1]
                        }
                    </label><br>
                    <label id="imageSize3"></label>
                </div>
            </div>
            <br />

            @Html.TextBox("PostContent",Model.PostModel.PostContent,new{@class="form-control",@type="hidden", @id="PostContent"})
            @Html.TextBox("PostContent2",Model.PostModel.PostContent2,new{@class="form-control",@type="hidden",@id="PostContent2"})
            @Html.TextBox("PostContent3",Model.PostModel.PostContent3,new{@class="form-control",@type="hidden",@id="PostContent3"})

            @Html.Label("Description")
            @Html.TextBox("Description",Model.PostModel.Description,new{@class="form-control"})
            <br />
            @Html.Label("Location Name")
            <select class="form-control" name="LocationId">
                @foreach (var item in Model.LocationModel)
                {
                    if (item.LocationId == Model.PostModel.LocationId)
                    {
                        <option value=" @item.LocationId" selected>@item.LocationName</option>
                    }
                    else
                    {
                        <option value=" @item.LocationId">@item.LocationName</option>
                    }
                }
            </select>
            <br />

            @Html.Label("IsActive")
            <select class="form-control" name="IsActive">
                @if (Model.PostModel.IsActive)
                {
                    <option value="True" selected>Aktif</option>
                    <option value="False">Pasif</option>
                }
                else
                {
                    <option value="False" selected>Pasif</option>
                    <option value="True">Aktif</option>
                }
            </select>
            <br />
            <input id="updateBtn" class="form-control btn btn-primary" type="submit" value="Post Update" />
        }
    </div>
</div>


<script>
    //File Upload
    function changeContent() {
        var btn = document.getElementById('updateBtn');
        var selectedImgCounts = document.getElementById('image_file').files.length;
        console.log(selectedImgCounts);

        switch (selectedImgCounts) {
            case 1:

                var file1 = document.getElementById('image_file').files[0];
                var sizeLabel1 = document.getElementById('imageSize1');
                document.getElementById('imageDisplay1').src = window.URL.createObjectURL(file1);
                document.getElementById('imageName1').innerHTML = file1.name;

                if (file1.size > 819200) {
                    sizeLabel1.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel1.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel1.innerHTML = returnFileSize(file1.size);
                    sizeLabel1.style.color = "black";
                    btn.disabled = false;
                }

                break;
            case 2:
                var file1 = document.getElementById('image_file').files[0];
                var sizeLabel1 = document.getElementById('imageSize1');
                document.getElementById('imageDisplay1').src = window.URL.createObjectURL(file1);
                document.getElementById('imageName1').innerHTML = file1.name;

                var file2 = document.getElementById('image_file').files[1];
                var sizeLabel2 = document.getElementById('imageSize2');
                document.getElementById('imageDisplay2').src = window.URL.createObjectURL(file2);
                document.getElementById('imageName2').innerHTML = file2.name;

                if (file1.size > 819200) {
                    sizeLabel1.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel1.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel1.innerHTML = returnFileSize(file1.size);
                    sizeLabel1.style.color = "black";
                    btn.disabled = false;
                }
                if (file2.size > 819200) {
                    sizeLabel2.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel2.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel2.innerHTML = returnFileSize(file2.size);
                    sizeLabel2.style.color = "black";
                    btn.disabled = false;
                }
                break;
            case 3:
                var file1 = document.getElementById('image_file').files[0];
                var sizeLabel1 = document.getElementById('imageSize1');
                document.getElementById('imageDisplay1').src = window.URL.createObjectURL(file1);
                document.getElementById('imageName1').innerHTML = file1.name;

                var file2 = document.getElementById('image_file').files[1];
                var sizeLabel2 = document.getElementById('imageSize2');
                document.getElementById('imageDisplay2').src = window.URL.createObjectURL(file2);
                document.getElementById('imageName2').innerHTML = file2.name;

                var file3 = document.getElementById('image_file').files[2];
                var sizeLabel3 = document.getElementById('imageSize3');
                document.getElementById('imageDisplay3').src = window.URL.createObjectURL(file3);
                document.getElementById('imageName3').innerHTML = file3.name;

                if (file1.size > 819200) {
                    sizeLabel1.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel1.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel1.innerHTML = returnFileSize(file1.size);
                    sizeLabel1.style.color = "black";
                    btn.disabled = false;
                }
                if (file2.size > 819200) {
                    sizeLabel2.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel2.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel2.innerHTML = returnFileSize(file2.size);
                    sizeLabel2.style.color = "black";
                    btn.disabled = false;
                }
                if (file3.size > 819200) {
                    sizeLabel3.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel3.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel3.innerHTML = returnFileSize(file3.size);
                    sizeLabel3.style.color = "black";
                    btn.disabled = false;
                }
                break;
        }
    }

    // File Size
    function returnFileSize(number) {
        if (number < 1024) {
            return `${number} bytes`;
        } else if (number >= 1024 && number < 1048576) {
            return `${(number / 1024).toFixed(1)} KB`;
        } else if (number >= 1048576) {
            return `${(number / 1048576).toFixed(1)} MB`;
        }
    }

    //Photo Remove
    function photoRemove(content,bir,iki,uc){
        document.getElementById(content).innerText = null;
        document.getElementById(bir).innerHTML = null;
        document.getElementById(iki).src = null;
        document.getElementById(uc).innerHTML = null;
    }


</script>

