@using EntityLayer;
@model PostGenreLocationUserModel;
@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var postcontent = @Model.PostModel.PostContent == null ? "/user_interface/assets/default.png" : "/post_images/" + @Model.PostModel.PostContent;
    var postcontent2 = @Model.PostModel.PostContent2 == null ? "/user_interface/assets/default.png" : "/post_images/" + @Model.PostModel.PostContent2;
    var postcontent3 = @Model.PostModel.PostContent3 == null ? "/user_interface/assets/default.png" : "/post_images/" + @Model.PostModel.PostContent3;

}
<div class="card">
    <div class="card-header">
        <h2>Post Add</h2>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Add", "Post", FormMethod.Post, new { @class = "form-group", @enctype = "multipart/form-data" }))
        {
            @Html.Label("Creator NickName")
            <select class="form-control" name="UserId">
                @foreach (var item in Model.UserModel)
                {
                    <option value="@item.UserId">@item.NickName</option>
                }
            </select>
            <br />
            @Html.Label("Type")
            <select class="form-control" name="GenreId">
                @foreach (var item in Model.GenreModel)
                {
                    <option value="@item.GenreId">@item.GenreName</option>
                }
            </select>
            <br />
            @Html.Label("Generate Date")
            @Html.TextBox("GenerateDate","",new { @class = "form-control",@type="date"})
            @Html.ValidationMessage("GenerateDate","",new{@class="text-danger"})
            <br />
            @Html.Label("Generate Time")
            @Html.TextBox("GenerateTime","",new { @class = "form-control",@type="time"})
            @Html.ValidationMessage("GenerateTime","",new{@class="text-danger"})
            <br />
            @Html.Label("Post Img File")
            <div style="display:flex;justify-content:space-around;">
                <div class="pickPhoto">
                    <input class="file_upload" type="file" name="imgFile1" class="form-control" accept="image/*" onchange="clickImagePicker('imageDisplay1','imageName1','imageSize1',0)" />
                    <img class="imageDisplay" id="imageDisplay1" src="@postcontent" width="100%" height="80%" /><br>
                    <div class="cardImage-bottomSide">
                        <div class="icon-text">
                            <label style="margin:0px!important;" id="imageName1">
                                @if (@Model.PostModel.PostContent != null)
                                {
                                    @Model.PostModel.PostContent.Split("_")[1]
                                }
                            </label><br>
                            <ion-icon name="trash-outline" class="carpi" onclick="photoRemove('PostContent','imageSize1','imageDisplay1','imageName1',0)"></ion-icon>
                        </div>
                        <label id="imageSize1"></label>
                    </div>
                </div>
                <div class="pickPhoto">
                    <input class="file_upload" type="file" name="imgFile2" class="form-control" accept="image/*" onchange="clickImagePicker('imageDisplay2','imageName2','imageSize2',1)" />
                    <img class="imageDisplay" id="imageDisplay2" src="@postcontent2" width="100%" height="80%" /><br>
                    <div class="cardImage-bottomSide">
                        <div class="icon-text">
                            <label style="margin:0px!important;" id="imageName2">
                                @if (@Model.PostModel.PostContent2 != null)
                                {
                                    @Model.PostModel.PostContent2.Split("_")[1]
                                }
                            </label><br>
                            <ion-icon name="trash-outline" class="carpi" onclick="photoRemove('PostContent2','imageSize2','imageDisplay2','imageName2',1)"></ion-icon>
                        </div>
                        <label id="imageSize2"></label>
                    </div>
                </div>
                <div class="pickPhoto">
                    <input class="file_upload" type="file" name="imgFile3" class="form-control" accept="image/*" onchange="clickImagePicker('imageDisplay3','imageName3','imageSize3',2)" />
                    <img class="imageDisplay" id="imageDisplay3" src="@postcontent3" width="100%" height="80%" /><br>
                    <div class="cardImage-bottomSide">
                        <div class="icon-text">
                            <label style="margin:0px!important;" id="imageName3">
                                @if (@Model.PostModel.PostContent3 != null)
                                {
                                    @Model.PostModel.PostContent3.Split("_")[1]
                                }
                            </label><br>
                            <ion-icon name="trash-outline" class="carpi" onclick="photoRemove('PostContent3','imageSize3','imageDisplay3','imageName3',2)"></ion-icon>
                        </div>
                        <label id="imageSize3"></label>
                    </div>
                </div>
            </div>
            <br />
            @Html.TextBox("PostContent","",new{@class="form-control",@type="hidden", @id="PostContent"})
            @Html.TextBox("PostContent2","",new{@class="form-control",@type="hidden",@id="PostContent2"})
            @Html.TextBox("PostContent3","",new{@class="form-control",@type="hidden",@id="PostContent3"})

            @Html.Label("Description")
            @Html.TextBox("Description","",new { @class = "form-control"})
            @Html.ValidationMessage("Description","",new{@class="text-danger"})
            <br />
            @Html.Label("Location Name")
            <select class="form-control" name="LocationId">
                @foreach (var item in Model.LocationModel)
                {
                    <option value="@item.LocationId">@item.LocationName</option>
                }
            </select>
            <br />
            @Html.Label("IsActive")
            <select class="form-control" name="IsActive">
                <option value="True">Aktif</option>
                <option value="False">Pasif</option>
            </select>
            <br />
            <input id="addBtn" class="form-control btn btn-primary" type="submit" value="Post Add" />
        }
    </div>
</div>

<script>
    checkForDeleteBtnVisibility();
    checkForNull();
    
    function checkForNull() {
        if (document.getElementsByClassName("imageDisplay")[0].src.includes("/user_interface/assets/default.png")
            && document.getElementsByClassName("imageDisplay")[1].src.includes("/user_interface/assets/default.png")
            && document.getElementsByClassName("imageDisplay")[2].src.includes("/user_interface/assets/default.png")){
            document.getElementById("addBtn").disabled = true;
        }
    }

    function checkForDeleteBtnVisibility() {
        //display delete icon is none as loading
        var carpiList = document.getElementsByTagName("ion-icon");
        var imageList = document.getElementsByClassName("imageDisplay");
        for (var i = 0; i < 3; i++) {
            var src = imageList[i].src;
            if (src.includes("/user_interface/assets/default.png")) {
                carpiList[i].style.display = "none";
            }
            else {
                carpiList[i].style.display = "block";
            }
        }
    }

    // File Size
    function returnFileSize(number) {
        if (number < 1024) {
            return `${number} bytes`;
        } else if (number >= 1024 && number < 1048576) {
            return `${(number / 1024).toFixed(1)} KB`;
        } else if (number >= 1048576) {
            return `${(number / 1048576).toFixed(1)} MB`;
        }
    }

    //Photo Remove
    function photoRemove(imgInput, sizeLabel, imgSrc, nameLabel, i) {

        var carpi = document.getElementsByClassName("carpi")[i];
        carpi.style.display = "none";
        document.getElementById(imgInput).value = "";
        document.getElementById(sizeLabel).innerHTML = "";
        document.getElementById(imgSrc).src = "/user_interface/assets/default.png";
        document.getElementById(nameLabel).innerHTML = "Photo removed!";
        document.getElementById(nameLabel).style.color = "red";
        document.getElementById(nameLabel).style.textAlign = "center";
        checkForNull();
    }


    function clickImagePicker(imageDisplay, imageName, imageSize, i) {

        var imgFile = document.getElementsByClassName("file_upload")[i].files[0];
        var sizeLabel = document.getElementById(imageSize);
        var img = document.getElementById(imageDisplay);
        var imgName = document.getElementById(imageName);
        var deleteIcon = document.getElementsByTagName("ion-icon")[i];
        var btn = document.getElementById("addBtn");
        if (img != null) {
            img.src = window.URL.createObjectURL(imgFile);
            imgName.innerHTML = imgFile.name;
            deleteIcon.style.display = "block";
            if (imgFile.size > 819200) {
                sizeLabel.innerHTML = "Cannot be more than 800 kilobytes";
                sizeLabel.style.color = "red";
                btn.disabled = true;
            }
            else {
                sizeLabel.innerHTML = returnFileSize(imgFile.size);
                sizeLabel.style.color = "black";
                btn.disabled = false;
            }
        }
        else {
            sizeLabel.innerHTML = "";
            imgName.innerHTML = "No Photo!";
            img.src = "/user_interface/assets/default.png";
            deleteIcon.style.display = "none";
            checkForNull();
        }
    }

</script>







@*            function changeContent() {
        var btn = document.getElementById('addBtn');
        var selectedImgCounts = document.getElementById('image_file').files.length;
        console.log(selectedImgCounts);

        switch (selectedImgCounts) {
            case 1:

                var file1 = document.getElementById('image_file').files[0];
                var sizeLabel1 = document.getElementById('imageSize1');
                document.getElementById('imageDisplay1').src = window.URL.createObjectURL(file1);
                document.getElementById('imageName1').innerHTML = file1.name;

                if (file1.size > 819200) {
                    sizeLabel1.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel1.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel1.innerHTML = returnFileSize(file1.size);
                    sizeLabel1.style.color = "black";
                    btn.disabled = false;
                }

                break;
            case 2:
                var file1 = document.getElementById('image_file').files[0];
                var sizeLabel1 = document.getElementById('imageSize1');
                document.getElementById('imageDisplay1').src = window.URL.createObjectURL(file1);
                document.getElementById('imageName1').innerHTML = file1.name;

                var file2 = document.getElementById('image_file').files[1];
                var sizeLabel2 = document.getElementById('imageSize2');
                document.getElementById('imageDisplay2').src = window.URL.createObjectURL(file2);
                document.getElementById('imageName2').innerHTML = file2.name;

                if (file1.size > 819200) {
                    sizeLabel1.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel1.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel1.innerHTML = returnFileSize(file1.size);
                    sizeLabel1.style.color = "black";
                    btn.disabled = false;
                }
                if (file2.size > 819200) {
                    sizeLabel2.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel2.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel2.innerHTML = returnFileSize(file2.size);
                    sizeLabel2.style.color = "black";
                    btn.disabled = false;
                }
                break;
            case 3:
                var file1 = document.getElementById('image_file').files[0];
                var sizeLabel1 = document.getElementById('imageSize1');
                document.getElementById('imageDisplay1').src = window.URL.createObjectURL(file1);
                document.getElementById('imageName1').innerHTML = file1.name;

                var file2 = document.getElementById('image_file').files[1];
                var sizeLabel2 = document.getElementById('imageSize2');
                document.getElementById('imageDisplay2').src = window.URL.createObjectURL(file2);
                document.getElementById('imageName2').innerHTML = file2.name;

                var file3 = document.getElementById('image_file').files[2];
                var sizeLabel3 = document.getElementById('imageSize3');
                document.getElementById('imageDisplay3').src = window.URL.createObjectURL(file3);
                document.getElementById('imageName3').innerHTML = file3.name;

                if (file1.size > 819200) {
                    sizeLabel1.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel1.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel1.innerHTML = returnFileSize(file1.size);
                    sizeLabel1.style.color = "black";
                    btn.disabled = false;
                }
                if (file2.size > 819200) {
                    sizeLabel2.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel2.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel2.innerHTML = returnFileSize(file2.size);
                    sizeLabel2.style.color = "black";
                    btn.disabled = false;
                }
                if (file3.size > 819200) {
                    sizeLabel3.innerHTML = "Cannot be more than 800 kilobytes";
                    sizeLabel3.style.color = "red";
                    btn.disabled = true;
                } else {
                    sizeLabel3.innerHTML = returnFileSize(file3.size);
                    sizeLabel3.style.color = "black";
                    btn.disabled = false;
                }
                break;
        }
    }

                        function photoRemove(content, bir, iki, uc) {
        document.getElementById(content).innerText = null;
        document.getElementById(bir).innerHTML = null;
        document.getElementById(iki).src = null;
        document.getElementById(uc).innerHTML = null;
    }*@